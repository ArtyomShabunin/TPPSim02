within TPPSim02.Shell;

model DrumShell2d
  import Modelica.Constants.pi;
  //Геометрические характеристики барабана
  parameter Modelica.SIunits.Length Din = 1.6 "Внутренний диаметр барабана";
  parameter Modelica.SIunits.Length delta = 80e-3 "Толщина стенки барабана";
  parameter Modelica.SIunits.Length L = 16.2 "Длина барабана";  
  parameter Integer Ntetta = 10 "Число элементов вдоль угловой координаты";
  parameter Integer Nr = 10 "Число элементов по толщине стенки";
  parameter Modelica.SIunits.Temperature Tstart = 15+273.15 "Начальная температура металла";
  //Характеристики металла
  parameter Modelica.SIunits.Density rho_m = 7800 "Плотность металла" annotation(
    Dialog(group = "Металл"));
  parameter Modelica.SIunits.SpecificHeatCapacity C_m = 578.05 "Удельная теплоемкость металла" annotation(
    Dialog(group = "Металл"));
  // Скрытые и расчетные параметры
  final parameter Modelica.SIunits.Length r1 = Din / 2 "Начальный радиус";
  final parameter Modelica.SIunits.Length r2 = Din / 2 + delta "Конечный радиус";
  final parameter Modelica.SIunits.Volume V = pi*(r2^2-r1^2)*L + 2*pi*(r1^2)*delta "Объем металла барабана";
  final parameter Modelica.SIunits.Mass M = V*rho_m "Масса металла барабана";
  final parameter Modelica.SIunits.Area S_element[Ntetta, Nr] = {d_tetta*((r1+delta/Nr)^2-r1^2) for r1 in r1:delta/Nr:(r2-delta/Nr), d_tetta in fill(pi/Ntetta, Ntetta)} "Поперечные площади элементов разбиения";
  final parameter Real C_element[Ntetta, Nr] = C_m*M*S_element/(pi*(r2^2-r1^2));
  
  TPPSim02.Thermal.HeatCapacitor[Ntetta, Nr] capacitor(C = C_element, each T(fixed = true, start = Tstart), each nPorts = 4)  annotation(
    Placement(visible = true, transformation(origin = {-114, -16}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor[Ntetta, Nr-1] conductor_r annotation(
    Placement(visible = true, transformation(origin = {-100, 62}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Components.ThermalConductor[Ntetta-1, Nr] conductor_tetta annotation(
    Placement(visible = true, transformation(origin = {-66, 106}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a[Ntetta] port annotation(
    Placement(visible = true, transformation(origin = {18, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {100, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation

  for i in 1:Ntetta, j in 1:Nr-1 loop 
    connect(capacitor[i,j].port[3], conductor_r[i,j].port_a);
    connect(conductor_r[i,j].port_b, capacitor[i,j+1].port[1]); 
  end for;

  for i in 1:Ntetta-1, j in 1:Nr loop
    connect(capacitor[i,j].port[4], conductor_tetta[i,j].port_a);
    connect(conductor_tetta[i,j].port_b, capacitor[i+1,j].port[2]);
  end for;

  connect(port[:], capacitor[:, 1].port[1]);

annotation(
    Diagram(graphics = {Ellipse(lineColor = {0, 170, 0}, lineThickness = 0.5, extent = {{-100, 100}, {100, -100}}), Ellipse(lineColor = {0, 170, 0}, lineThickness = 0.5, extent = {{-20, 20}, {20, -20}}), Ellipse(lineColor = {0, 170, 0}, lineThickness = 0.5, extent = {{-74, 74}, {74, -74}}), Ellipse(lineColor = {0, 170, 0}, lineThickness = 0.5, extent = {{-46, 46}, {46, -46}}), Line(origin = {0, 60}, points = {{0, 40}, {0, -40}}, color = {0, 170, 0}, thickness = 0.5), Line(origin = {0.229508, -60.0328}, points = {{0, 40}, {0, -40}}, color = {0, 170, 0}, thickness = 0.5), Line(origin = {0.486557, 39.5462}, points = {{-72, 32}, {-14, -26}}, color = {0, 170, 0}, thickness = 0.5), Line(origin = {0.257049, -39.9921}, points = {{-14, 26}, {-72, -32}}, color = {0, 170, 0}, thickness = 0.5), Line(origin = {0.229508, -40.24}, points = {{-20, 40}, {-100, 40}}, color = {0, 170, 0}, thickness = 0.5), Ellipse(origin = {-22, 56}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-32, 82}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-12, 30}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-56, 22}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-30, 12}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-82, 30}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-56, -24}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-30, -12}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-80, -34}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-12, -30}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-22, -56}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Ellipse(origin = {-32, -82}, fillPattern = FillPattern.Solid, extent = {{-4, 4}, {4, -4}}), Polygon(origin = {-23, 23}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{1, 7}, {7, 1}, {-1, -7}, {-7, -1}, {1, 7}}), Polygon(origin = {-43, 43}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{1, 7}, {7, 1}, {-1, -7}, {-7, -1}, {1, 7}}), Polygon(origin = {-61, 61}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{1, 7}, {7, 1}, {-1, -7}, {-7, -1}, {1, 7}}), Polygon(origin = {-30, 0}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-4, 6}, {4, 6}, {4, -6}, {-4, -6}, {-4, 6}}), Polygon(origin = {-60, 0}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-4, 6}, {4, 6}, {4, -6}, {-4, -6}, {-4, 6}}), Polygon(origin = {-86, 0}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-4, 6}, {4, 6}, {4, -6}, {-4, -6}, {-4, 6}}), Polygon(origin = {-23, -23}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-7, 1}, {-1, 7}, {7, -1}, {1, -7}, {-7, 1}}), Polygon(origin = {-43, -43}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-7, 1}, {-1, 7}, {7, -1}, {1, -7}, {-7, 1}}), Polygon(origin = {-61, -61}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-7, 1}, {-1, 7}, {7, -1}, {1, -7}, {-7, 1}}), Polygon(origin = {-18, 43}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-6, 3}, {2, 7}, {8, -5}, {0, -9}, {-6, 3}}), Polygon(origin = {-28, 71}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-6, 3}, {2, 7}, {8, -5}, {0, -9}, {-6, 3}}), Polygon(origin = {-43, 18}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{7, 0}, {5, -6}, {-7, -2}, {-5, 4}, {7, 0}}), Polygon(origin = {-43, -19}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{3, 7}, {7, -1}, {-3, -7}, {-7, 3}, {3, 7}}), Polygon(origin = {-69, -31}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{3, 7}, {7, -1}, {-3, -7}, {-7, 3}, {3, 7}}), Polygon(origin = {-18, -43}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-2, 7}, {6, 3}, {2, -7}, {-6, -3}, {-2, 7}}), Polygon(origin = {-26, -69}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{-2, 7}, {6, 3}, {2, -7}, {-6, -3}, {-2, 7}}), Polygon(origin = {-69, 28}, fillColor = {0, 170, 255}, fillPattern = FillPattern.Solid, points = {{7, 0}, {5, -6}, {-7, -2}, {-5, 4}, {7, 0}}), Polygon(origin = {-7, 18}, fillColor = {255, 0, 0}, fillPattern = FillPattern.Solid, points = {{-3, 2}, {1, 4}, {3, 0}, {-1, -2}, {-3, 2}}), Polygon(origin = {-19, 7}, fillColor = {255, 0, 0}, fillPattern = FillPattern.Solid, points = {{-1, 3}, {-3, -1}, {1, -3}, {3, 1}, {-1, 3}}), Polygon(origin = {-19, -7}, fillColor = {255, 0, 0}, fillPattern = FillPattern.Solid, points = {{-3, 1}, {-1, -3}, {3, -1}, {1, 3}, {-3, 1}}), Polygon(origin = {-7, -19}, fillColor = {255, 0, 0}, fillPattern = FillPattern.Solid, points = {{-3, -1}, {1, -3}, {3, 1}, {-1, 3}, {-3, -1}}), Line(origin = {-63, 77}, points = {{1, -15}, {-1, 15}}), Line(origin = {-52, 69}, points = {{10, -23}, {-10, 23}}), Line(origin = {-81, 40}, points = {{13, -12}, {-13, 12}}), Line(origin = {-66, 37}, points = {{22, -17}, {-22, 17}}), Line(origin = {-3, 9}, points = {{-15, -1}, {15, 1}}), Line(origin = {3, 15}, points = {{-9, 3}, {9, -3}}), Line(origin = {-93, -31}, points = {{13, -5}, {-13, 5}}), Line(origin = {-79, -22}, points = {{23, -2}, {-23, 2}})}),
    Icon(graphics = {Polygon(origin = {50, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Backward, points = {{50, 100}, {44, 100}, {30, 98}, {16, 94}, {2, 88}, {-10, 80}, {-22, 70}, {-34, 54}, {-42, 40}, {-46, 28}, {-50, 8}, {-50, 0}, {-50, -6}, {-48, -20}, {-44, -34}, {-40, -44}, {-34, -54}, {-22, -70}, {-10, -80}, {2, -88}, {16, -94}, {30, -98}, {44, -100}, {50, -100}, {50, -60}, {46, -60}, {34, -58}, {28, -56}, {20, -52}, {14, -48}, {4, -38}, {-2, -30}, {-8, -16}, {-10, -6}, {-10, 0}, {-10, 4}, {-8, 16}, {-2, 30}, {4, 38}, {14, 48}, {28, 56}, {36, 58}, {46, 60}, {50, 60}, {50, 96}, {50, 100}}), Line(origin = {100, 38}, points = {{0, 18}, {0, -18}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.Open, Arrow.None}), Line(origin = {62, 0}, points = {{-18, 0}, {18, 0}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.Open, Arrow.None}), Line(origin = {74, 25}, points = {{-12, 13}, {12, -13}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.Open, Arrow.None}), Line(origin = {100, -37}, points = {{0, -17}, {0, 17}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.Open, Arrow.None}), Line(origin = {74, -26}, points = {{-12, -12}, {12, 12}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.Open, Arrow.None}), Line(origin = {88, 30}, points = {{-4, 10}, {4, -10}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.None, Arrow.Open}), Line(origin = {72, 10}, points = {{-10, 4}, {8, -2}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.None, Arrow.Open}), Line(origin = {72, -9.77}, points = {{-10, -4}, {8, 2}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.None, Arrow.Open}), Line(origin = {88, -30}, points = {{-4, -10}, {4, 10}}, color = {255, 0, 0}, thickness = 0.5, arrow = {Arrow.None, Arrow.Open})}));
end DrumShell2d;
